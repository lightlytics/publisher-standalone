digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_eks_cluster.example (orphan)" [label = "aws_eks_cluster.example", shape = "box"]
		"[root] aws_iam_role.example (orphan)" [label = "aws_iam_role.example", shape = "box"]
		"[root] aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy (orphan)" [label = "aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy", shape = "box"]
		"[root] aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController (orphan)" [label = "aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController", shape = "box"]
		"[root] aws_network_interface_sg_attachment.sg_attachment (expand)" [label = "aws_network_interface_sg_attachment.sg_attachment", shape = "box"]
		"[root] aws_subnet.test_subnet (orphan)" [label = "aws_subnet.test_subnet", shape = "box"]
		"[root] aws_subnet.test_subnet2 (orphan)" [label = "aws_subnet.test_subnet2", shape = "box"]
		"[root] aws_vpc.main (orphan)" [label = "aws_vpc.main", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" [label = "module.aws_security_group.module.sg.aws_security_group.this", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" [label = "module.aws_security_group.module.sg.aws_security_group.this_name_prefix", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.egress_rules", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self", shape = "box"]
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)" [label = "module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id", shape = "box"]
		"[root] module.ec2_instance.aws_instance.this (expand)" [label = "module.ec2_instance.aws_instance.this", shape = "box"]
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" [label = "module.ec2_instance.aws_spot_instance_request.this", shape = "box"]
		"[root] module.key_pair.aws_key_pair.this (expand)" [label = "module.key_pair.aws_key_pair.this", shape = "box"]
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" [label = "module.vpc.aws_cloudwatch_log_group.flow_log", shape = "box"]
		"[root] module.vpc.aws_customer_gateway.this (expand)" [label = "module.vpc.aws_customer_gateway.this", shape = "box"]
		"[root] module.vpc.aws_db_subnet_group.database (expand)" [label = "module.vpc.aws_db_subnet_group.database", shape = "box"]
		"[root] module.vpc.aws_default_network_acl.this (expand)" [label = "module.vpc.aws_default_network_acl.this", shape = "box"]
		"[root] module.vpc.aws_default_route_table.default (expand)" [label = "module.vpc.aws_default_route_table.default", shape = "box"]
		"[root] module.vpc.aws_default_security_group.this (expand)" [label = "module.vpc.aws_default_security_group.this", shape = "box"]
		"[root] module.vpc.aws_default_vpc.this (expand)" [label = "module.vpc.aws_default_vpc.this", shape = "box"]
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" [label = "module.vpc.aws_egress_only_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" [label = "module.vpc.aws_elasticache_subnet_group.elasticache", shape = "box"]
		"[root] module.vpc.aws_flow_log.this (expand)" [label = "module.vpc.aws_flow_log.this", shape = "box"]
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.this (expand)" [label = "module.vpc.aws_internet_gateway.this", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.this (expand)" [label = "module.vpc.aws_nat_gateway.this", shape = "box"]
		"[root] module.vpc.aws_network_acl.database (expand)" [label = "module.vpc.aws_network_acl.database", shape = "box"]
		"[root] module.vpc.aws_network_acl.elasticache (expand)" [label = "module.vpc.aws_network_acl.elasticache", shape = "box"]
		"[root] module.vpc.aws_network_acl.intra (expand)" [label = "module.vpc.aws_network_acl.intra", shape = "box"]
		"[root] module.vpc.aws_network_acl.outpost (expand)" [label = "module.vpc.aws_network_acl.outpost", shape = "box"]
		"[root] module.vpc.aws_network_acl.private (expand)" [label = "module.vpc.aws_network_acl.private", shape = "box"]
		"[root] module.vpc.aws_network_acl.public (expand)" [label = "module.vpc.aws_network_acl.public", shape = "box"]
		"[root] module.vpc.aws_network_acl.redshift (expand)" [label = "module.vpc.aws_network_acl.redshift", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.database_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.elasticache_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.intra_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.outpost_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.private_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.public_outbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_inbound", shape = "box"]
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" [label = "module.vpc.aws_network_acl_rule.redshift_outbound", shape = "box"]
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" [label = "module.vpc.aws_redshift_subnet_group.redshift", shape = "box"]
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" [label = "module.vpc.aws_route.database_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" [label = "module.vpc.aws_route.database_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" [label = "module.vpc.aws_route.database_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" [label = "module.vpc.aws_route.private_ipv6_egress", shape = "box"]
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" [label = "module.vpc.aws_route.private_nat_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" [label = "module.vpc.aws_route.public_internet_gateway", shape = "box"]
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" [label = "module.vpc.aws_route.public_internet_gateway_ipv6", shape = "box"]
		"[root] module.vpc.aws_route_table.database (expand)" [label = "module.vpc.aws_route_table.database", shape = "box"]
		"[root] module.vpc.aws_route_table.elasticache (expand)" [label = "module.vpc.aws_route_table.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table.intra (expand)" [label = "module.vpc.aws_route_table.intra", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.redshift (expand)" [label = "module.vpc.aws_route_table.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.database (expand)" [label = "module.vpc.aws_route_table_association.database", shape = "box"]
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" [label = "module.vpc.aws_route_table_association.elasticache", shape = "box"]
		"[root] module.vpc.aws_route_table_association.intra (expand)" [label = "module.vpc.aws_route_table_association.intra", shape = "box"]
		"[root] module.vpc.aws_route_table_association.outpost (expand)" [label = "module.vpc.aws_route_table_association.outpost", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift (expand)" [label = "module.vpc.aws_route_table_association.redshift", shape = "box"]
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" [label = "module.vpc.aws_route_table_association.redshift_public", shape = "box"]
		"[root] module.vpc.aws_subnet.database (expand)" [label = "module.vpc.aws_subnet.database", shape = "box"]
		"[root] module.vpc.aws_subnet.elasticache (expand)" [label = "module.vpc.aws_subnet.elasticache", shape = "box"]
		"[root] module.vpc.aws_subnet.intra (expand)" [label = "module.vpc.aws_subnet.intra", shape = "box"]
		"[root] module.vpc.aws_subnet.outpost (expand)" [label = "module.vpc.aws_subnet.outpost", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.redshift (expand)" [label = "module.vpc.aws_subnet.redshift", shape = "box"]
		"[root] module.vpc.aws_vpc.this (expand)" [label = "module.vpc.aws_vpc.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options.this", shape = "box"]
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" [label = "module.vpc.aws_vpc_dhcp_options_association.this", shape = "box"]
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" [label = "module.vpc.aws_vpc_ipv4_cidr_block_association.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway.this (expand)" [label = "module.vpc.aws_vpn_gateway.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" [label = "module.vpc.aws_vpn_gateway_attachment.this", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.intra", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.private", shape = "box"]
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" [label = "module.vpc.aws_vpn_gateway_route_propagation.public", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" [label = "module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role", shape = "box"]
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" [label = "module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"]" [label = "provider[\"registry.terraform.io/hashicorp/tls\"]", shape = "diamond"]
		"[root] tls_private_key.this (expand)" [label = "tls_private_key.this", shape = "box"]
		"[root] aws_eks_cluster.example (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role.example (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_network_interface_sg_attachment.sg_attachment (expand)" -> "[root] module.aws_security_group.output.security_group_id (expand)"
		"[root] aws_network_interface_sg_attachment.sg_attachment (expand)" -> "[root] module.ec2_instance.output.primary_network_interface_id (expand)"
		"[root] aws_subnet.test_subnet (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_subnet.test_subnet2 (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_vpc.main (orphan)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.module.sg (close)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.output.security_group_description (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.output.security_group_id (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.output.security_group_name (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.output.security_group_owner_id (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.output.security_group_vpc_id (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_egress_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.computed_ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_egress_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group (close)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.output.security_group_description (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.output.security_group_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.output.security_group_name (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.output.security_group_owner_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.output.security_group_vpc_id (expand)"
		"[root] module.aws_security_group.module.sg (close)" -> "[root] module.aws_security_group.module.sg.var.auto_groups (expand)"
		"[root] module.aws_security_group.module.sg (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.create (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.create_sg (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.create_timeout (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.delete_timeout (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.description (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.name (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.revoke_rules_on_delete (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.tags (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.use_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this (expand)" -> "[root] module.aws_security_group.module.sg.var.vpc_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.create (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.create_sg (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.create_timeout (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.delete_timeout (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.description (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.name (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.revoke_rules_on_delete (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.tags (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.use_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg.var.vpc_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.computed_ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.local.this_sg_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.var.rules (expand)"
		"[root] module.aws_security_group.module.sg.local.this_sg_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.local.this_sg_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.local.this_sg_id (expand)" -> "[root] module.aws_security_group.module.sg.var.security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_description (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_description (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_name (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_name (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_owner_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_owner_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_vpc_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this (expand)"
		"[root] module.aws_security_group.module.sg.output.security_group_vpc_id (expand)" -> "[root] module.aws_security_group.module.sg.aws_security_group.this_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.var.auto_groups (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_rules (expand)" -> "[root] module.aws_security_group.var.auto_computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_rules (expand)" -> "[root] module.aws_security_group.var.computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.computed_egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_self (expand)" -> "[root] module.aws_security_group.var.computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.computed_egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.var.auto_computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_rules (expand)" -> "[root] module.aws_security_group.var.computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.computed_ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.var.computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.computed_ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.create (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.create (expand)" -> "[root] module.aws_security_group.var.create (expand)"
		"[root] module.aws_security_group.module.sg.var.create_sg (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.create_timeout (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.delete_timeout (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.description (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.description (expand)" -> "[root] module.aws_security_group.var.description (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.egress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.egress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_prefix_list_ids (expand)" -> "[root] module.aws_security_group.var.egress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_rules (expand)" -> "[root] module.aws_security_group.var.auto_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_rules (expand)" -> "[root] module.aws_security_group.var.egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_self (expand)" -> "[root] module.aws_security_group.var.egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.ingress_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.ingress_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_prefix_list_ids (expand)" -> "[root] module.aws_security_group.var.ingress_prefix_list_ids (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_rules (expand)" -> "[root] module.aws_security_group.var.auto_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_rules (expand)" -> "[root] module.aws_security_group.var.ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_self (expand)" -> "[root] module.aws_security_group.var.ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.name (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.name (expand)" -> "[root] module.aws_security_group.var.name (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_rules (expand)" -> "[root] module.aws_security_group.var.auto_number_of_computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_rules (expand)" -> "[root] module.aws_security_group.var.number_of_computed_egress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.number_of_computed_egress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_number_of_computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_self (expand)" -> "[root] module.aws_security_group.var.number_of_computed_egress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.number_of_computed_egress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_rules (expand)" -> "[root] module.aws_security_group.var.auto_number_of_computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_rules (expand)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_rules (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_with_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.var.auto_number_of_computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_with_self (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.number_of_computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group.var.number_of_computed_ingress_with_source_security_group_id (expand)"
		"[root] module.aws_security_group.module.sg.var.revoke_rules_on_delete (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.revoke_rules_on_delete (expand)" -> "[root] module.aws_security_group.var.revoke_rules_on_delete (expand)"
		"[root] module.aws_security_group.module.sg.var.rules (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.security_group_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.tags (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.tags (expand)" -> "[root] module.aws_security_group.var.tags (expand)"
		"[root] module.aws_security_group.module.sg.var.use_name_prefix (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.use_name_prefix (expand)" -> "[root] module.aws_security_group.var.use_name_prefix (expand)"
		"[root] module.aws_security_group.module.sg.var.vpc_id (expand)" -> "[root] module.aws_security_group.module.sg (expand)"
		"[root] module.aws_security_group.module.sg.var.vpc_id (expand)" -> "[root] module.aws_security_group.var.vpc_id (expand)"
		"[root] module.aws_security_group.output.security_group_description (expand)" -> "[root] module.aws_security_group.module.sg.output.security_group_description (expand)"
		"[root] module.aws_security_group.output.security_group_id (expand)" -> "[root] module.aws_security_group.module.sg.output.security_group_id (expand)"
		"[root] module.aws_security_group.output.security_group_name (expand)" -> "[root] module.aws_security_group.module.sg.output.security_group_name (expand)"
		"[root] module.aws_security_group.output.security_group_owner_id (expand)" -> "[root] module.aws_security_group.module.sg.output.security_group_owner_id (expand)"
		"[root] module.aws_security_group.output.security_group_vpc_id (expand)" -> "[root] module.aws_security_group.module.sg.output.security_group_vpc_id (expand)"
		"[root] module.aws_security_group.var.auto_computed_egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_computed_egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_computed_ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_number_of_computed_egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_number_of_computed_egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_number_of_computed_ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.auto_number_of_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.create (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.description (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.name (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_egress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_prefix_list_ids (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_rules (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_with_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_with_ipv6_cidr_blocks (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_with_self (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.number_of_computed_ingress_with_source_security_group_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.revoke_rules_on_delete (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.tags (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.use_name_prefix (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.vpc_id (expand)" -> "[root] module.aws_security_group (expand)"
		"[root] module.aws_security_group.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.arn (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.instance_state (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.ipv6_addresses (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.outpost_arn (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.password_data (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.primary_network_interface_id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.private_dns (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.private_ip (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.public_dns (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.public_ip (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_bid_status (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_instance_id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_request_state (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.tags_all (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.local.is_t_instance_type (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ami (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.associate_public_ip_address (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.availability_zone (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_core_count (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_credits (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_threads_per_core (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.create (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.create_spot_instance (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.disable_api_termination (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ebs_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ebs_optimized (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.enable_volume_tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.enclave_options_enabled (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ephemeral_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.get_password_data (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.hibernation (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.host_id (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.iam_instance_profile (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ipv6_address_count (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ipv6_addresses (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.key_name (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.launch_template (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.metadata_options (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.monitoring (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.name (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.network_interface (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.placement_group (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.private_ip (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.root_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.secondary_private_ips (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.source_dest_check (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.subnet_id (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.tenancy (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.timeouts (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.user_data (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.user_data_base64 (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.volume_tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.vpc_security_group_ids (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.local.is_t_instance_type (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ami (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.associate_public_ip_address (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.availability_zone (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_core_count (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_credits (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_threads_per_core (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.create (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.create_spot_instance (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.disable_api_termination (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ebs_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ebs_optimized (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.enable_volume_tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.enclave_options_enabled (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ephemeral_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.get_password_data (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.hibernation (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.host_id (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.iam_instance_profile (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ipv6_address_count (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ipv6_addresses (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.key_name (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.launch_template (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.metadata_options (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.monitoring (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.name (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.network_interface (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.placement_group (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.private_ip (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.root_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.secondary_private_ips (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.source_dest_check (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_block_duration_minutes (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_instance_interruption_behavior (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_launch_group (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_price (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_type (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_valid_from (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_valid_until (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_wait_for_fulfillment (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.subnet_id (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.tenancy (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.timeouts (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.user_data (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.user_data_base64 (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.volume_tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.vpc_security_group_ids (expand)"
		"[root] module.ec2_instance.local.is_t_instance_type (expand)" -> "[root] module.ec2_instance.var.instance_type (expand)"
		"[root] module.ec2_instance.output.arn (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.arn (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.id (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.instance_state (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.instance_state (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.ipv6_addresses (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.outpost_arn (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.outpost_arn (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.password_data (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.password_data (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.primary_network_interface_id (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.primary_network_interface_id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.private_dns (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.private_dns (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.private_ip (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.private_ip (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.public_dns (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.public_dns (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.public_ip (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.public_ip (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_bid_status (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_instance_id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_request_state (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.tags_all (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.tags_all (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.var.ami (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.associate_public_ip_address (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.availability_zone (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_core_count (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_credits (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_threads_per_core (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.create (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.create_spot_instance (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.disable_api_termination (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ebs_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ebs_optimized (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.enable_volume_tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.enclave_options_enabled (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ephemeral_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.get_password_data (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.hibernation (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.host_id (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.iam_instance_profile (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ipv6_address_count (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ipv6_addresses (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.key_name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.key_name (expand)" -> "[root] module.key_pair.output.key_pair_key_name (expand)"
		"[root] module.ec2_instance.var.launch_template (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.metadata_options (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.monitoring (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.network_interface (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.placement_group (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.private_ip (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.root_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.secondary_private_ips (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.source_dest_check (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_block_duration_minutes (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_instance_interruption_behavior (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_launch_group (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_price (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_valid_from (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_valid_until (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_wait_for_fulfillment (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.ec2_instance.var.tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.tenancy (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.timeouts (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.user_data (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.user_data_base64 (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.volume_tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.vpc_security_group_ids (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.vpc_security_group_ids (expand)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.key_pair_fingerprint (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.key_pair_key_name (expand)"
		"[root] module.key_pair (close)" -> "[root] module.key_pair.output.key_pair_key_pair_id (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] module.key_pair.var.create_key_pair (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] module.key_pair.var.key_name (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] module.key_pair.var.key_name_prefix (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] module.key_pair.var.public_key (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] module.key_pair.var.tags (expand)"
		"[root] module.key_pair.aws_key_pair.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.key_pair.output.key_pair_fingerprint (expand)" -> "[root] module.key_pair.aws_key_pair.this (expand)"
		"[root] module.key_pair.output.key_pair_key_name (expand)" -> "[root] module.key_pair.aws_key_pair.this (expand)"
		"[root] module.key_pair.output.key_pair_key_pair_id (expand)" -> "[root] module.key_pair.aws_key_pair.this (expand)"
		"[root] module.key_pair.var.create_key_pair (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.key_name (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.key_name_prefix (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.public_key (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.key_pair.var.public_key (expand)" -> "[root] tls_private_key.this (expand)"
		"[root] module.key_pair.var.tags (expand)" -> "[root] module.key_pair (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.azs (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.cgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_ipv6_egress_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_default_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.default_vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.dhcp_options_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.egress_only_internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnet_group_name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.igw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.name (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_public_ips (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.natgw_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_ipv6_egress_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_nat_gateway_route_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_internet_gateway_route_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_network_acl_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_public_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_association_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_route_table_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_arns (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnet_group (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.this_customer_gateway (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vgw_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_enable_dns_support (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_arn (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_destination_type (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_flow_log_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_instance_tenancy (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_association_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_ipv6_cidr_block (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_main_route_table_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_owner_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)"
		"[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateway_tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.customer_gateways (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_customer_gateway.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.create_database_subnet_group (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_name (expand)"
		"[root] module.vpc.aws_db_subnet_group.database (expand)" -> "[root] module.vpc.var.database_subnet_group_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_egress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_ingress (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_name (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.default_network_acl_tags (expand)"
		"[root] module.vpc.aws_default_network_acl.this (expand)" -> "[root] module.vpc.var.manage_default_network_acl (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_name (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_propagating_vgws (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_routes (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.default_route_table_tags (expand)"
		"[root] module.vpc.aws_default_route_table.default (expand)" -> "[root] module.vpc.var.manage_default_route_table (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_egress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_ingress (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_name (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.default_security_group_tags (expand)"
		"[root] module.vpc.aws_default_security_group.this (expand)" -> "[root] module.vpc.var.manage_default_security_group (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_classiclink (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_enable_dns_support (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_name (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.default_vpc_tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.manage_default_vpc (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_default_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_egress_only_igw (expand)"
		"[root] module.vpc.aws_egress_only_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.enable_nat_gateway (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.nat_eip_tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.reuse_nat_ips (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_group (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_name (expand)"
		"[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_group_tags (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_file_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_log_format (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_max_aggregation_interval (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_per_hour_partition (expand)"
		"[root] module.vpc.aws_flow_log.this (expand)" -> "[root] module.vpc.var.flow_log_traffic_type (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)"
		"[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.var.vpc_flow_log_tags (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.create_igw (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.igw_tags (expand)"
		"[root] module.vpc.aws_internet_gateway.this (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.local.nat_gateway_ips (expand)"
		"[root] module.vpc.aws_nat_gateway.this (expand)" -> "[root] module.vpc.var.nat_gateway_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.database (expand)" -> "[root] module.vpc.var.database_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.elasticache (expand)" -> "[root] module.vpc.var.elasticache_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.intra (expand)" -> "[root] module.vpc.var.intra_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.outpost (expand)" -> "[root] module.vpc.var.outpost_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.private (expand)" -> "[root] module.vpc.var.private_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.public (expand)" -> "[root] module.vpc.var.public_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_acl_tags (expand)"
		"[root] module.vpc.aws_network_acl.redshift (expand)" -> "[root] module.vpc.var.redshift_dedicated_network_acl (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_inbound (expand)" -> "[root] module.vpc.var.database_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.aws_network_acl_rule.database_outbound (expand)" -> "[root] module.vpc.var.database_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)" -> "[root] module.vpc.var.elasticache_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)" -> "[root] module.vpc.var.elasticache_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)" -> "[root] module.vpc.var.intra_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)" -> "[root] module.vpc.var.intra_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)" -> "[root] module.vpc.var.outpost_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)" -> "[root] module.vpc.var.outpost_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_inbound (expand)" -> "[root] module.vpc.var.private_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.aws_network_acl_rule.private_outbound (expand)" -> "[root] module.vpc.var.private_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_inbound (expand)" -> "[root] module.vpc.var.public_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.aws_network_acl_rule.public_outbound (expand)" -> "[root] module.vpc.var.public_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)" -> "[root] module.vpc.var.redshift_inbound_acl_rules (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)" -> "[root] module.vpc.var.redshift_outbound_acl_rules (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_group (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_name (expand)"
		"[root] module.vpc.aws_redshift_subnet_group.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_group_tags (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_internet_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route.database_nat_gateway (expand)" -> "[root] module.vpc.var.create_database_nat_gateway_route (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_ipv6_egress (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.aws_route.private_nat_gateway (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_internet_gateway_route (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.create_database_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_route_table.database (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.create_elasticache_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.nat_gateway_count (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.create_redshift_subnet_route_table (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_route_table_tags (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_route_table.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.database (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.elasticache (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_route_table_association.intra (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.outpost (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.enable_public_redshift (expand)"
		"[root] module.vpc.aws_route_table_association.redshift_public (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.database (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.elasticache (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.intra (expand)" -> "[root] module.vpc.var.intra_subnets (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_arn (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_az (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.outpost (expand)" -> "[root] module.vpc.var.outpost_subnets (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.map_public_ip_on_launch (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.public_subnets (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_suffix (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnet_tags (expand)"
		"[root] module.vpc.aws_subnet.redshift (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.cidr (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_classiclink_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_hostnames (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_dns_support (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.enable_ipv6 (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.instance_tenancy (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] module.vpc.var.vpc_tags (expand)"
		"[root] module.vpc.aws_vpc.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_domain_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_netbios_node_type (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_ntp_servers (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.dhcp_options_tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.enable_dhcp_options (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)" -> "[root] module.vpc.var.secondary_cidr_blocks (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.amazon_side_asn (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.enable_vpn_gateway (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_az (expand)"
		"[root] module.vpc.aws_vpn_gateway.this (expand)" -> "[root] module.vpc.var.vpn_gateway_tags (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.local.vpc_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_attachment.this (expand)" -> "[root] module.vpc.var.vpn_gateway_id (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)" -> "[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)" -> "[root] module.vpc.var.propagate_private_route_tables_vgw (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)" -> "[root] module.vpc.var.propagate_public_route_tables_vgw (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.local.enable_flow_log (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)"
		"[root] module.vpc.local.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.create_vpc (expand)"
		"[root] module.vpc.local.enable_flow_log (expand)" -> "[root] module.vpc.var.enable_flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.aws_cloudwatch_log_group.flow_log (expand)"
		"[root] module.vpc.local.flow_log_destination_arn (expand)" -> "[root] module.vpc.var.flow_log_destination_arn (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.aws_iam_role.vpc_flow_log_cloudwatch (expand)"
		"[root] module.vpc.local.flow_log_iam_role_arn (expand)" -> "[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.database_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.elasticache_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.private_subnets (expand)"
		"[root] module.vpc.local.max_subnet_length (expand)" -> "[root] module.vpc.var.redshift_subnets (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.local.max_subnet_length (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.one_nat_gateway_per_az (expand)"
		"[root] module.vpc.local.nat_gateway_count (expand)" -> "[root] module.vpc.var.single_nat_gateway (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.local.nat_gateway_ips (expand)" -> "[root] module.vpc.var.external_nat_ip_ids (expand)"
		"[root] module.vpc.local.vpc_id (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.output.azs (expand)" -> "[root] module.vpc.var.azs (expand)"
		"[root] module.vpc.output.cgw_arns (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.cgw_ids (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.database_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] module.vpc.output.database_ipv6_egress_route_id (expand)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] module.vpc.output.database_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] module.vpc.output.database_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.database (expand)"
		"[root] module.vpc.output.database_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.database (expand)"
		"[root] module.vpc.output.database_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.database_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnet_group (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnet_group_name (expand)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] module.vpc.output.database_subnets (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.database_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.database (expand)"
		"[root] module.vpc.output.default_network_acl_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_security_group_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_arn (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_cidr_block (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_network_acl_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_default_security_group_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.default_vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] module.vpc.output.dhcp_options_id (expand)" -> "[root] module.vpc.aws_vpc_dhcp_options.this (expand)"
		"[root] module.vpc.output.egress_only_internet_gateway_id (expand)" -> "[root] module.vpc.aws_egress_only_internet_gateway.this (expand)"
		"[root] module.vpc.output.elasticache_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.elasticache (expand)"
		"[root] module.vpc.output.elasticache_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.elasticache_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnet_group_name (expand)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.elasticache_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.elasticache (expand)"
		"[root] module.vpc.output.igw_arn (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.igw_id (expand)" -> "[root] module.vpc.aws_internet_gateway.this (expand)"
		"[root] module.vpc.output.intra_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.intra (expand)"
		"[root] module.vpc.output.intra_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] module.vpc.output.intra_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.intra (expand)"
		"[root] module.vpc.output.intra_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.intra_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.intra (expand)"
		"[root] module.vpc.output.name (expand)" -> "[root] module.vpc.var.name (expand)"
		"[root] module.vpc.output.nat_ids (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.output.nat_public_ips (expand)" -> "[root] module.vpc.var.external_nat_ips (expand)"
		"[root] module.vpc.output.natgw_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.this (expand)"
		"[root] module.vpc.output.outpost_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.outpost (expand)"
		"[root] module.vpc.output.outpost_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.outpost_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.outpost (expand)"
		"[root] module.vpc.output.private_ipv6_egress_route_ids (expand)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] module.vpc.output.private_nat_gateway_route_ids (expand)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] module.vpc.output.private_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.private (expand)"
		"[root] module.vpc.output.private_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc.output.private_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.private_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.private_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.output.public_internet_gateway_ipv6_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] module.vpc.output.public_internet_gateway_route_id (expand)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] module.vpc.output.public_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.public (expand)"
		"[root] module.vpc.output.public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc.output.public_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.public_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.public_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.output.redshift_network_acl_arn (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_network_acl_id (expand)" -> "[root] module.vpc.aws_network_acl.redshift (expand)"
		"[root] module.vpc.output.redshift_public_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] module.vpc.output.redshift_route_table_association_ids (expand)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.output.redshift_route_table_ids (expand)" -> "[root] module.vpc.aws_route_table.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_arns (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnet_group (expand)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.redshift_subnets_ipv6_cidr_blocks (expand)" -> "[root] module.vpc.aws_subnet.redshift (expand)"
		"[root] module.vpc.output.this_customer_gateway (expand)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] module.vpc.output.vgw_arn (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway.this (expand)"
		"[root] module.vpc.output.vgw_id (expand)" -> "[root] module.vpc.aws_vpn_gateway_attachment.this (expand)"
		"[root] module.vpc.output.vpc_arn (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_enable_dns_support (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc.local.flow_log_iam_role_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_arn (expand)" -> "[root] module.vpc.local.flow_log_destination_arn (expand)"
		"[root] module.vpc.output.vpc_flow_log_destination_type (expand)" -> "[root] module.vpc.var.flow_log_destination_type (expand)"
		"[root] module.vpc.output.vpc_flow_log_id (expand)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_instance_tenancy (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_association_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_ipv6_cidr_block (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_main_route_table_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_owner_id (expand)" -> "[root] module.vpc.aws_vpc.this (expand)"
		"[root] module.vpc.output.vpc_secondary_cidr_blocks (expand)" -> "[root] module.vpc.aws_vpc_ipv4_cidr_block_association.this (expand)"
		"[root] module.vpc.var.amazon_side_asn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.azs (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_internet_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_nat_gateway_route (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_database_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_egress_only_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_elasticache_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_iam_role (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_flow_log_cloudwatch_log_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_igw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_redshift_subnet_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.create_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.customer_gateways (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.database_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_network_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_propagating_vgws (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_routes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_egress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_ingress (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_security_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.default_vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_domain_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_name_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_netbios_node_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_ntp_servers (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.dhcp_options_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.elasticache_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_classiclink_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dhcp_options (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_hostnames (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_dns_support (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_flow_log (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_ipv6 (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_public_redshift (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.enable_vpn_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ip_ids (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.external_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_iam_role_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_kms_key_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_name_prefix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_cloudwatch_log_group_retention_in_days (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_destination_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_file_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_hive_compatible_partitions (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_log_format (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_max_aggregation_interval (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_per_hour_partition (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.flow_log_traffic_type (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.igw_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.instance_tenancy (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.intra_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_route_table (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_security_group (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.manage_default_vpc (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.map_public_ip_on_launch (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_eip_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.nat_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.one_nat_gateway_per_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_arn (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.outpost_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.private_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_intra_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_private_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.propagate_public_route_tables_vgw (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.public_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_acl_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_dedicated_network_acl (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_inbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_outbound_acl_rules (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_route_table_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_assign_ipv6_address_on_creation (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_group_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_ipv6_prefixes (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_suffix (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnet_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.redshift_subnets (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.reuse_nat_ips (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.secondary_cidr_blocks (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.single_nat_gateway (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_permissions_boundary (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_flow_log_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_az (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_id (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpn_gateway_tags (expand)" -> "[root] module.vpc (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_eks_cluster.example (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role.example (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy_attachment.example-AmazonEKSClusterPolicy (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_iam_role_policy_attachment.example-AmazonEKSVPCResourceController (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_network_interface_sg_attachment.sg_attachment (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.test_subnet (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_subnet.test_subnet2 (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_vpc.main (orphan)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_egress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.computed_ingress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.egress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_rules (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_ipv6_cidr_blocks (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_self (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.aws_security_group.module.sg.aws_security_group_rule.ingress_with_source_security_group_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_customer_gateway.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_db_subnet_group.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_network_acl.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_route_table.default (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_security_group.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_default_vpc.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_elasticache_subnet_group.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_flow_log.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.database_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.elasticache_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.intra_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.outpost_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.private_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.public_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_inbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_network_acl_rule.redshift_outbound (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_redshift_subnet_group.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.database_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_ipv6_egress (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.private_nat_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route.public_internet_gateway_ipv6 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.database (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.elasticache (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.outpost (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.redshift_public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_dhcp_options_association.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.intra (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpn_gateway_route_propagation.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)" -> "[root] tls_private_key.this (expand)"
		"[root] root" -> "[root] module.aws_security_group (close)"
		"[root] root" -> "[root] module.ec2_instance (close)"
		"[root] root" -> "[root] module.key_pair (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)"
		"[root] tls_private_key.this (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"]"
	}
}

