import minimist from 'minimist'
import {publish} from 'lightlytics-publisher-core'

try {
  const args = minimist(process.argv.slice(2))

  if (args['help'] || args['h']) {
    throw "Expected usage: node index.js --dir=\"./working-dir\" --hostname=\"org.lightlytics.com\" --plan=\"./working-dir/plan.json\" --graph=\"./working-dir/graph.dot\" --token=\"collection-token\""
  }

  const requiredArgs = ['dir', 'hostname', 'plan', 'graph', 'token']

  if (Object.keys(args).length <= requiredArgs.length) {
    throw "Expected at least 4 cli arguments. usage: node index.js --dir=\"./working-dir\" --hostname=\"org.lightlytics.com\" --plan=\"./working-dir/plan.json\" --graph=\"./working-dir/graph.dot\" --token=\"collection-token\""
  }

  requiredArgs.forEach(requiredArg => {
    if (!args[requiredArg]) {
      throw `Missing arg - \"${requiredArg}\" usage: node index.js --${requiredArg}=value. try --help if needed`
    }
  })

  const tfWorkingDir = args['dir']
  const apiUrl = args['hostname']
  const tfPlan = args['plan']
  const tfGraph = args['graph']
  const collectionToken = args['token']


  publish({apiUrl, tfWorkingDir, tfPlan, tfGraph, collectionToken})
    .then(({eventId, customerId}) => {
      logFormattedSimulation(`https://${apiUrl}/w/${customerId}/simulations/${eventId}`)
    }).catch(error => console.error(error));
} catch (error) {
  console.error(error)
}

function logFormattedSimulation(link) {
  const pullRequestMessage = `An execution simulation has been generated by **Lightlytics**, to view this run impact analysis, Visit:
${link}

> _This comment was added automatically by a git workflow to help DevOps teams predict what will be the impact of the proposed change after completing this PR_`

  console.log(pullRequestMessage)
}
